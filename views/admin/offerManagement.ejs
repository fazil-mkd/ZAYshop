<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offer Management System</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
     <link rel="stylesheet" href="/assets/css/admin/offer.css">
   <style>

/* Modal styles */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
}

.modal-content {
    background-color: #fff;
    margin: 15% auto;
    padding: 20px;
    border-radius: 8px;
    width: 90%;
    max-width: 500px;
    position: relative;
}

.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
}

.form-group input {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box;
}

.button-group {
    display: flex;
    gap: 10px;
    justify-content: flex-end;
    margin-top: 20px;
}

/* Make sure modal is on top of everything */
#editModal {
    z-index: 9999;
}




   </style>



</head>
<body>
    <%- include('./layout/sidenav.ejs') %>
    <div class="container">
        <div class="header">
            <i class="fas fa-tags"></i>
            <h1>Offer</h1>
        </div>
   
        <div class="form-section">
            <% if (successMessage) { %>
                <div id="success-alert" class="alert alert-success"><%= successMessage %></div>
              <% } else { %>
                <div id="success-alert" class="alert alert-success" style="display:none;"></div>
              <% } %>
              <% if (errorMessage) { %>
                <div id="success-alert" class="alert alert-success"><%= errorMessage %></div>
              <% } else { %>
                <div id="success-alert" class="alert alert-success" style="display:none;"></div>
              <% } %>
              
            <div class="offer-type-grid">
                <div class="offer-type-radio" onclick="selectOfferType('product')">
                    <input type="radio" name="offerType" id="productType" value="product" checked>
                    <div >
                        <i class="fas fa-box-open"></i> Product Offer
                    </div>
                </div>
                <div class="offer-type-radio" onclick="selectOfferType('category')">
                    <input type="radio" name="offerType" id="categoryType" value="category">
                    <div>
                        <i class="fas fa-layer-group"></i> Category Offer
                    </div>
                </div>
            </div>
            <div id="productError" class="error-message" style="display:none; color:red;"></div>
            <div id="categoryError" class="error-message" style="display:none; color:red;"></div>
            <div id="productSection" class="form-control">
                <label> <h2> Select Product</h2></label>
                <select id="productSelect">
                    <option  value="">Choose a Product</option>
                    <% products.forEach(product => { %>
                        <option value="<%= product._id %>"><%= product.name %></option>
                    <% }); %>
                </select>
            </div>
            
            <div id="categorySection" class="form-control" style="display:none;">
                <label><h2>Select Category</h2> </label>
                <select id="categorySelect">
                    <option value="">Choose a Category</option>
                    <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"><%= category.name %></option>
                    <% }); %>
                </select>
            </div>

            <div class="form-control">
                <label>Discount Percentage</label>
                <input type="number" id="discountPercentage" min="0" max="100" placeholder="Enter discount %">
                <div id="discountError" class="error-message" style="display:none; color:red;"></div>
            </div>

            <div class="form-control">
                <label>Offer Duration</label>
                <div style="display:flex; gap:1rem;">
                    <input type="date" id="startDate" style="flex:1;">
                    <input type="date" id="endDate" style="flex:1;">
                </div>
                <div id="dateError" class="error-message" style="display:none; color:red;"></div>
            </div>
            <div id="offerTypeError" class="error-message" style="display:none; color:red;"></div>

            <button onclick="createOffer(); createOfferVal();" class="btn-create">
                <i class="fas fa-plus-circle"></i> Create Offer
            </button>

            <div id="offerResult"></div>
        </div>
    </div>
        <div class="active-offers">
            <h2>Active Offers</h2>
            <div class="tab-buttons">
                <button class="tab-button active" onclick="showOffers('product')">Product Offers</button>
                <button class="tab-button" onclick="showOffers('category')">Category Offers</button>
            </div>
            
            <div id="productOffers" class="offers-grid">
                <% offerAppliedProduct.forEach(product => { %>
                    <div class="offer-card">
                        <h3><%= product.name %></h3>
                        <div class="offer-info">
                            <span><i class="fas fa-percentage"></i> <%= product.discountPercentage %> OFF</span>
                            <span><i class="fas fa-calendar"></i> <%= new Date(product.offerStartDate).toLocaleDateString() %> - <%= new Date(product.offerEndDate).toLocaleDateString() %></span>
                        </div>
                        <button class="tab-button edit-button"
                        data-id="<%= product._id %>"
                        data-type="product"
                        data-name="<%= product.name %>"
                        data-discount="<%= product.discountPercentage %>"
                        data-start="<%= product.offerStartDate %>"
                        data-end="<%= product.offerEndDate %>"
                        onclick="handleEdit(this)">
                        <i class="fas fa-edit"></i> Edit
                    </button>
                        <button class="tab-button" onclick="deleteOffer('<%=product._id%>','product' )">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                        
                    </div>
                <% }); %>
            </div>

            <div id="categoryOffers" class="offers-grid" style="display: none;">
                <% offerAppliedCategory.forEach(Category => { %>
                    <div class="offer-card">
                        <h3><%= Category.name %></h3>
                        <div class="offer-info">
                            <span><i class="fas fa-percentage"></i> <%= Category.discountPercentage %> OFF</span>
                            <span><i class="fas fa-calendar"></i> <%= new Date(Category.offerStartDate).toLocaleDateString() %> - <%= new Date(Category.offerEndDate).toLocaleDateString() %></span>
                        </div>
                        <button class="tab-button edit-button"
                        data-id="<%= Category._id %>"
                        data-type="category"
                        data-name="<%= Category.name %>"
                        data-discount="<%= Category.discountPercentage %>"
                        data-start="<%= Category.offerStartDate %>"
                        data-end="<%= Category.offerEndDate %>"
                        onclick="handleEdit(this)">
                        <i class="fas fa-edit"></i> Edit
                    </button>
                        <button class="tab-button" onclick="deleteOffer('<%=Category._id%>','category')">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                        
                    </div>
                <% }); %>
            </div>
        </div>

        <div id="editModal" class="modal">
            <div class="modal-content">
                <h2>Edit Offer</h2>
                <form id="editOfferForm">
                    <input type="hidden" id="editItemId">
                    <input type="hidden" id="editItemType">
                    
                    <div class="form-group">
                        <label>Name:</label>
                        <input type="text" id="editName" readonly>
                    </div>
        
                    <div class="form-group">
                        <label>Discount Percentage:</label>
                        <input type="number" id="editDiscount" min="0" max="100" required>
                        <span id="editDiscountError" class="error-message"></span>
                    </div>
                    <div id="discountErrorEdit" class="error-message" style="display:none; color:red;"></div>
                    <div class="form-group">
                        <label>Start Date:</label>
                        <input type="date" id="editStartDate" required>
                        <span id="editStartDateError" class="error-message"></span>
                    </div>
        
                    <div class="form-group">
                        <label>End Date:</label>
                        <input type="date" id="editEndDate" required>
                        <span id="editEndDateError" class="error-message"></span>
                    </div>
                    <div id="dateErrorEdit" class="error-message" style="display:none; color:red;"></div>
                    <div class="button-group">
                        <button type="submit" class="tab-button edit-button">Save Changes</button>
                        <button type="button" class="tab-button delete-button" onclick="closeEditModal()">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
        
   
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
     function selectOfferType(type) {
 
    const productSection = document.getElementById('productSection');
    const categorySection = document.getElementById('categorySection');

    if (type === 'product') {
        productSection.style.display = 'block';
        categorySection.style.display = 'none';
    } else if (type === 'category') {
        productSection.style.display = 'none';
        categorySection.style.display = 'block';
    }

    const offerTypeRadio = document.querySelector(`input[name="offerType"][value="${type}"]`);
    offerTypeRadio.checked = true;
}
        
        


        async function createOffer() {
    const offerType = document.querySelector('input[name="offerType"]:checked').value;
    const discountPercentage = document.getElementById('discountPercentage').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const resultDiv = document.getElementById('offerResult');




    let selectedItem = offerType === 'product'
    ? document.getElementById('productSelect').value
    : document.getElementById('categorySelect').value;
  
  if (!selectedItem) {
    Swal.fire('Please select an item.');
    return;
  }
        console.log(selectedItem,discountPercentage,startDate,endDate)
    if (!selectedItem || !discountPercentage || !startDate || !endDate) {
        resultDiv.innerHTML = '<div class="result-success" style="color:red;">Please fill all fields!</div>';
        return;
    }

    const offerDetails = {
        type: offerType,
        item: selectedItem,
        discount: discountPercentage ,
        start: startDate,
        end: endDate
    };

    try {
        const response = await fetch('/admin/offers', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(offerDetails),
        });

        const data = await response.json();

        if (response.ok) {
            resultDiv.innerHTML = `
                <div class="result-success">
                    Offer Created Successfully! 
                </div>
            `;
            setTimeout(() => {
        window.location.reload();
    }, 2000);
        } else {
            resultDiv.innerHTML = `<div class="result-error" style="color:red;">${data.error}</div>`;
        }
    } catch (error) {
        resultDiv.innerHTML = `<div class="result-error" style="color:red;">An error occurred: ${error.message}</div>`;
    }
}




async function deleteOffer(Id, type) {
    const { value: confirmed } = await Swal.fire({
        title: 'Are you sure?',
        text: `Do you want to delete this ${type}'s offer!`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: `Yes, delete the ${type}!`,
        cancelButtonText: 'Cancel'
    });

    if (confirmed) {
        try {
            const response = await fetch(`/admin/offer/${type}/${Id}`, {
                method: 'DELETE'
            });

            if (response.ok) {
              
                Swal.fire({
                    title: 'Deleted!',
                    text: `${type.charAt(0).toUpperCase() + type.slice(1)} offer has been deleted.`,
                    icon: 'success'
                }).then(() => {
                    location.reload();  
                });
            } else {
              
                Swal.fire({
                    title: 'Error!',
                    text: `There was an issue deleting the ${type}.`,
                    icon: 'error'
                });
            }
        } catch (error) {
         
            Swal.fire({
                title: 'Error!',
                text: `There was an error with the request to delete the ${type}.`,
                icon: 'error'
            });
        }
    }
}



        function showOffers(type) {
            document.getElementById('productOffers').style.display = type === 'product' ? 'grid' : 'none';
            document.getElementById('categoryOffers').style.display = type === 'category' ? 'grid' : 'none';
            
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });
            event.target.classList.add('active');
        }








        function createOfferVal() {
   
    resetErrorMessages();

 
    const offerType = document.querySelector('input[name="offerType"]:checked').value;
    const productSelect = document.getElementById('productSelect');
    const categorySelect = document.getElementById('categorySelect');
    const discountPercentage = document.getElementById('discountPercentage').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;

    let valid = true;

 
    if (!offerType) {
        valid = false;
        document.getElementById('offerTypeError').innerText = 'Please select an offer type.';
        document.getElementById('offerTypeError').style.display = 'block';
    }

   
    if (offerType === 'product' && !productSelect.value) {
        valid = false;
        document.getElementById('productError').innerText = 'Please select a product.';
        document.getElementById('productError').style.display = 'block';
    } else if (offerType === 'category' && !categorySelect.value) {
        valid = false;
        document.getElementById('categoryError').innerText = 'Please select a category.';
        document.getElementById('categoryError').style.display = 'block';
    }

   
    const discountRegex = /^[0-9]{1,3}$/;
    if (!discountRegex.test(discountPercentage) || discountPercentage < 1 || discountPercentage > 100) {
        valid = false;
        document.getElementById('discountError').innerText = 'Please enter a valid discount percentage between 1 and 100.';
        document.getElementById('discountError').style.display = 'block';
    }

    
    if (!startDate || !endDate) {
        valid = false;
        document.getElementById('dateError').innerText = 'Please select both start and end dates for the offer.';
        document.getElementById('dateError').style.display = 'block';
    } else if (new Date(startDate) > new Date(endDate)) {
        valid = false;
        document.getElementById('dateError').innerText = 'The start date cannot be later than the end date.';
        document.getElementById('dateError').style.display = 'block';
    }

   
    if (valid) {
       
        console.log('Offer created successfully!');
    }

    return valid; 
}


function resetErrorMessages() {
    document.getElementById('offerTypeError').style.display = 'none';
    document.getElementById('productError').style.display = 'none';
    document.getElementById('categoryError').style.display = 'none';
    document.getElementById('discountError').style.display = 'none';
    document.getElementById('dateError').style.display = 'none';
}


document.addEventListener('DOMContentLoaded', function() {

function showAlert(type, message) {
  const alert = document.getElementById(type + '-alert');
  alert.textContent = message;
  alert.style.display = 'flex';
  alert.classList.add('animate-in');
  

  setTimeout(() => {
    alert.style.display = 'none';
  }, 5000);
}


function hideAlert(type) {
  const alert = document.getElementById(type + '-alert');
  alert.style.display = 'none';
}
});





function initializeFlashMessages() {
            const successAlert = document.getElementById('success-alert');
            const errorAlert = document.getElementById('error-alert');

            function showAlertIfMessageExists(alertElement) {
                const message = alertElement.getAttribute('data-message');
                const contentElement = alertElement.querySelector('.alert-content');

                if (message && message !== 'undefined' && message.trim() !== '') {
                    contentElement.textContent = message;
                    alertElement.classList.add('show');

                    setTimeout(() => {
                        alertElement.classList.remove('show');
                        alertElement.setAttribute('data-message', '');
                    }, 2000);
                }
            }

            showAlertIfMessageExists(successAlert);
            showAlertIfMessageExists(errorAlert);
        }

        document.addEventListener('DOMContentLoaded', initializeFlashMessages);




function handleEdit(button) {
    const data = button.dataset;
    openEditModal(
        data.id,
        data.type,
        data.name,
        parseFloat(data.discount),
        data.start,
        data.end
    );
}


function openEditModal(id, type, name, discount, startDate, endDate) {
    const modal = document.getElementById('editModal');
    const itemId = document.getElementById('editItemId');
    const itemType = document.getElementById('editItemType');
    const nameInput = document.getElementById('editName');
    const discountInput = document.getElementById('editDiscount');
    const startDateInput = document.getElementById('editStartDate');
    const endDateInput = document.getElementById('editEndDate');


    itemId.value = id;
    itemType.value = type;
    nameInput.value = name;
    discountInput.value = discount;
    

    const startDateObj = new Date(startDate);
    const endDateObj = new Date(endDate);
    startDateInput.value = startDateObj.toISOString().split('T')[0];
    endDateInput.value = endDateObj.toISOString().split('T')[0];

    modal.style.display = 'block';
}


function closeEditModal() {
    document.getElementById('editModal').style.display = 'none';
}


document.getElementById('editOfferForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    const resultDiv = document.getElementById('offerResult');


    const itemId = document.getElementById('editItemId').value.trim();
    const type = document.getElementById('editItemType').value.trim().toLowerCase();
    const discount = document.getElementById('editDiscount').value.trim();
    const start = document.getElementById('editStartDate').value.trim();
    const end = document.getElementById('editEndDate').value.trim();

 

    let valid = true;

 
    if (!type) {
        valid = false;
        document.getElementById('offerTypeErrorEdit').innerText = 'Please select an offer type.';
        document.getElementById('offerTypeErrorEdit').style.display = 'block';
    }

   

    const discountRegex = /^[0-9]{1,3}$/;
    if (!discountRegex.test(discount) || discount < 1 || discount > 100) {
        valid = false;
        document.getElementById('discountErrorEdit').innerText = 'Please enter a valid discount percentage between 1 and 100.';
        document.getElementById('discountErrorEdit').style.display = 'block';
    }

    
    if (!start || !end) {
        valid = false;
        document.getElementById('dateErrorEdit').innerText = 'Please select both start and end dates for the offer.';
        document.getElementById('dateErrorEdit').style.display = 'block';
    } else if (new Date(start) > new Date(end)) {
        valid = false;
        document.getElementById('dateErrorEdit').innerText = 'The start date cannot be later than the end date.';
        document.getElementById('dateErrorEdit').style.display = 'block';
    }

   
    if (valid) {

    const offerDetails = {
        type: type,
        item: itemId,
        discount: discount ,
        start: start,
        end: end
    };

   
    console.log('Sending:', offerDetails);

try {
    const response = await fetch('/admin/offers', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(offerDetails),
    });

    console.log('Response:', response); 

    const data = await response.json();
    console.log('Response Data:', data);

    if (response.ok) {
        resultDiv.innerHTML = `<div class="result-success">Offer Updated Successfully!</div>`;
        setTimeout(() => window.location.reload(), 2000);
    } else {
        resultDiv.innerHTML = `<div class="result-error" style="color:red;">${data.error}</div>`;
    }
} catch (error) {
    console.error('Fetch Error:', error);
    resultDiv.innerHTML = `<div class="result-error" style="color:red;">An error occurred: ${error.message}</div>`;
}


    closeEditModal();
}
});



function displayError(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
    }
}



window.onclick = function(event) {
    const modal = document.getElementById('editModal');
    if (event.target == modal) {
        closeEditModal();
    }
}




let today = new Date().toISOString().split("T")[0];


document.getElementById("editStartDate").setAttribute("min", today);
document.getElementById("editEndDate").setAttribute("min", today);


document.getElementById("startDate").setAttribute("min", today);
document.getElementById("endDate").setAttribute("min", today);

    </script>
</body>
</html>