<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <link href="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/css/admin/categoryAdd.css">
</head>

<body>

    <%- include('./layout/sidenav.ejs') %>

        <div class="container-fluid">
            <div class="category-container mt-5">
                <h2 class="text-center mb-4">Add New Category</h2>
                <form id="categoryForm" action="/admin/category/add" method="post" enctype="multipart/form-data"  >
                    <!-- Category Name -->
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Category Name</label>
                        <input type="text" class="form-control" id="categoryName" name="categoryName"
                            placeholder="Enter category name" minlength="3" maxlength="50">
                        <div id="nameError" class="error-message text-danger" style="display: none;">
                            <i class="bi bi-exclamation-circle me-1"></i>
                            Name must be 3-50 characters long
                        </div>
                    </div>

                    <!-- Image Upload -->
                    <div class="photo-upload-container mb-3 text-center">
                        <div class="round-photo-input" id="photoUploadContainer">
                            <input type="file" class="photo-input" id="categoryImage" name="image" accept="image/*">
                            <div id="photoPlaceholder" class="text-center">
                                <i class="bi bi-cloud-upload fs-1 text-muted"></i>
                                <p class="text-muted">Click to upload image</p>
                            </div>
                            <img id="roundPreview" class="photo-preview" src="" alt="Category Photo"
                                style="display: none;">
                        </div>
                        <button type="button" class="btn btn-link btn-remove-image" id="removeImageBtn"
                            style="display: none;">
                            <i class="bi bi-trash me-1"></i>Remove Image
                        </button>
                        <div id="imageError" class="error-message text-danger" style="display: none;">
                            <i class="bi bi-exclamation-circle me-1"></i>
                            Please upload a category image
                        </div>
                    </div>

                    <!-- Category Description -->
                    <div class="mb-3">
                        <label for="categoryDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="categoryDescription" name="categoryDescription" rows="3"
                            placeholder="Add a short description" minlength="10" maxlength="200"></textarea>
                        <div id="descError" class="error-message text-danger" style="display: none;">
                            <i class="bi bi-exclamation-circle me-1"></i>
                            Description must be 10-200 characters long
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <div class="text-center">
                        <button type="submit" class="btn btn-submit text-white w-100">
                            <i class="bi bi-plus-circle me-2"></i>Add Category
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Crop Image Modal -->
        <div class="modal fade" id="cropModal" tabindex="-1" aria-labelledby="cropModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content bg-dark text-light">
                    <div class="modal-header border-bottom-0">
                        <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                            aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <img id="cropModalImage" class="img-fluid" alt="Crop Preview">
                    </div>
                    <div class="modal-footer border-top-0">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="cropConfirmBtn">Crop & Save</button>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.js"></script>
        <!-- <script src="/js/admin/categoryAdd.js"></script> -->




        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.js"></script>
        <!-- <script src="/js/admin/categoryAdd.js"></script> -->

        <script>

document.addEventListener("DOMContentLoaded", function () {
        // DOM elements
        const categoryForm = document.getElementById('categoryForm');
        const categoryNameInput = document.getElementById('categoryName');
        const categoryImageInput = document.getElementById('categoryImage');
        const categoryDescriptionInput = document.getElementById('categoryDescription');
        const nameError = document.getElementById('nameError');
        const imageError = document.getElementById('imageError');
        const descError = document.getElementById('descError');
        const photoUploadContainer = document.getElementById('photoUploadContainer');
        const removeImageBtn = document.getElementById('removeImageBtn');
        const roundPreview = document.getElementById('roundPreview');
        const cropModal = new bootstrap.Modal(document.getElementById('cropModal'));
        const cropModalImage = document.getElementById('cropModalImage');
        const cropConfirmBtn = document.getElementById('cropConfirmBtn');
        let cropper;

    
        categoryImageInput.addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    roundPreview.src = e.target.result;
                    roundPreview.style.display = 'block';
                    photoUploadContainer.style.display = 'none';
                    removeImageBtn.style.display = 'inline-block'; 
                    cropModalImage.src = e.target.result; 
                    cropModal.show(); 
                    cropper = new Cropper(cropModalImage, {
                        aspectRatio: 1,
                        viewMode: 2,
                        autoCropArea: 0.65
                    });
                };
                reader.readAsDataURL(file);
            }
        });

      
        removeImageBtn.addEventListener('click', function () {
            categoryImageInput.value = '';
            roundPreview.src = ''; 
            roundPreview.style.display = 'none'; 
            photoUploadContainer.style.display = 'block'; 
            removeImageBtn.style.display = 'none'; 
            imageError.style.display = 'none'; 
        });

  
        cropConfirmBtn.addEventListener('click', function () {
            const croppedCanvas = cropper.getCroppedCanvas();
            croppedCanvas.toBlob(function (blob) {
                const formData = new FormData(categoryForm);
                formData.append('categoryImage', blob);
         
                submitForm(formData);  
            });
            cropper.destroy();
            cropModal.hide(); 
        });


        categoryForm.addEventListener('submit', function (event) {
    event.preventDefault();

    let valid = true;
    const noDotOrSpaceRegex = /^[^.\s]+$/; 

    if (
        categoryNameInput.value.length < 3 ||
        categoryNameInput.value.length > 50 ||
        !noDotOrSpaceRegex.test(categoryNameInput.value)
    ) {
        nameError.style.display = 'block';
        valid = false;
    } else {
        nameError.style.display = 'none';
    }

    if (
        categoryDescriptionInput.value.length < 10 ||
        categoryDescriptionInput.value.length > 200 ||
        !noDotOrSpaceRegex.test(categoryDescriptionInput.value)
    ) {
        descError.style.display = 'block';
        valid = false;
    } else {
        descError.style.display = 'none';
    }

    if (!categoryImageInput.files[0]) {
        imageError.style.display = 'block';
        valid = false;
    } else {
        imageError.style.display = 'none';
    }

    if (valid) {
        categoryForm.submit();
    }
});

        
     
        function submitForm(formData) {
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '/admin/category/add', true);
            xhr.onload = function () {
                if (xhr.status === 200) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Category added successfully!',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    categoryForm.reset(); 
                } else {
                   console.log('mot working')
                }
            };
            xhr.send(formData); 
        }
    });

        </script>



</body>

</html>