<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Order Management</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="/assets/css/admin/orderManagement.css">
</head>

<body style="width: 2000px; margin-left: 110px;">
  <!-- Sidebar -->
  <%- include('./layout/sidenav.ejs') %>

  <!-- Main Content -->
  <div  class="container-fluid" style="width: 80%; margin-left: auto;">
    <div class="row">
      <div class="col-12">
        <div class="card shadow-lg border-0 mt-4">
          <div class="card-body">
            <h4 class="card-title text-center">Order Management</h4>

            <!-- Search Form -->
            <!-- <form class="d-flex mb-4">
              <input type="text" class="form-control" placeholder="Search orders by ID or Customer name" id="searchInput">
              <button type="button" class="btn btn-primary ms-2" onclick="searchOrders()">Search</button>
            </form> -->

            <!-- Table to display orders -->
            <div class="table-responsive">
              <table class="table table-striped">
                <thead>
                  <tr>
                    <th>Order ID</th>
                    <th>Order Date</th>
                    <th>Status</th>
                    <th>Total Price</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody id="orderList">
                  <% orders.forEach(order => { %>
                    <tr>
                      <td><%= order.orderId %></td>
                      <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                      <td id="order_<%= order._id %>" class="status-cell">
                        <p><%= order.status %></p>
                        <form id="statusForm_<%= order._id %>" onsubmit="submitStatusChange(event)">
                          <select name="status">
                              <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %> 
                                  <%= order.status !== 'Pending' ? 'disabled' : '' %>>Pending</option>
                      
                              <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %> 
                                  <%= (order.paymentStatus !== 'Completed' && order.paymentMethod !== 'cod') || order.status === 'Shipped' || order.status === 'Delivered' || order.status === 'Returned' || order.status === 'Cancelled' ? 'disabled' : '' %>>Processing</option>
                      
                              <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %> 
                                  <%= (order.paymentStatus !== 'Completed' && order.paymentMethod !== 'cod') || order.status === 'Delivered' || order.status === 'Returned' || order.status === 'Cancelled' ? 'disabled' : '' %>>Shipped</option>
                      
                              <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %> 
                                  <%= (order.paymentStatus !== 'Completed' && order.paymentMethod !== 'cod') || order.status === 'Returned' || order.status === 'Cancelled' ? 'disabled' : '' %>>Delivered</option>
                          </select>
                      
                          <button type="submit" data-order-id="<%= order._id %>">Change Status</button>
                      </form>
                      
                      
                      </td>
                      <td><%= order.totalPrice.toFixed(2) %></td>
                      <td>
                        <% if (order.status !== "Cancelled" && order.status !== "Delivered" && order.status !== "Returned") { %>
                          <button class="cancel-button" onclick="cancelOrder('<%= order.orderId %>')">
                              <svg width="22" height="22" viewBox="0 0 22 22" fill="none">
                                  <path d="M5.5 5.5L16.5 16.5M16.5 5.5L5.5 16.5" stroke="currentColor"
                                      stroke-width="1.6" stroke-linecap="round" />
                              </svg>
                              Cancel Order
                          </button>
                      <% } %>
                        <button class="btn btn-primary btn-sm" onclick="viewOrderDetails('<%= order._id %>')">Details</button>
                        <button class="btn btn-primary btn-sm" onclick="window.location.href='/admin/order/view/<%= order._id %>'" >More</button>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>




<!--   
  <div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="orderDetailsLabel">Order Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="orderDetailsContent">
        
        </div>
      </div>
    </div>
  </div> -->



  
  <div class="d-flex justify-content-center align-items-center mt-3">
    <div class="pagination-container text-center">
        <span class="me-2" style="color:rgb(0, 0, 0);">Page <%= currentPage %> of <%= totalPages %></span>
        <nav aria-label="Page navigation">
            <ul class="pagination pagination-sm justify-content-center">
                
               
                <% if (currentPage > 1) { %>
                    <li class="page-item">
                        <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                <% } else { %>
                    <li class="page-item disabled">
                        <span class="page-link">&laquo;</span>
                    </li>
                <% } %>

          
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                    </li>
                <% } %>

  
                <% if (currentPage < totalPages) { %>
                    <li class="page-item">
                        <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                <% } else { %>
                    <li class="page-item disabled">
                        <span class="page-link">&raquo;</span>
                    </li>
                <% } %>

            </ul>
        </nav>
    </div>
</div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>

    function searchOrders() {
      const searchInput = document.getElementById('searchInput').value;
      window.location.href = `/admin/orders?search=${searchInput}`;
    }
    function viewOrderDetails(orderId) {
  fetch(`/admin/orders/${orderId}`)
    .then(response => response.json())
    .then(order => {

      const orderDetailsHTML = `
        <p><strong>Order ID:</strong> ${order.orderId}</p>
        <p><strong>Status:</strong> ${order.status}</p>
        <p><strong>Payment Method:</strong> ${order.paymentMethod}</p>
         <p><strong>Payment Status:</strong> ${order.paymentStatus}</p>
        <p><strong>Total Price:</strong> ${order.totalPrice}</p>
        <p><strong>Order Notes:</strong> ${order.orderNotes}</p>
        <p><strong>Created At:</strong> ${new Date(order.createdAt).toLocaleDateString()}</p>
        <hr>
        <h4> Address</h4>
        <p><strong>Full Name:</strong> ${order.address.fullName}</p>
        <p><strong>Street:</strong> ${order.address.streetAddress} ${order.address.aptNumber || ''}</p>
        <p><strong>City:</strong> ${order.address.city}</p>
        <p><strong>State:</strong> ${order.address.state}</p>
        <p><strong>Pincode:</strong> ${order.address.pincode}</p>
        <p><strong>Country:</strong> ${order.address.country}</p>
        <p><strong>Phone:</strong> ${order.address.phone}</p>
        <p><strong>Alt Phone:</strong> ${order.address.altPhone || 'N/A'}</p>
        <p><strong>Address Type:</strong> ${order.address.addressType}</p>
      `;

      Swal.fire({
        title: 'Order Details',
        html: orderDetailsHTML,
        width: '600px',
        showCloseButton: true,
        showCancelButton: false,
        confirmButtonText: 'Close',
        customClass: {
          popup: 'custom-swal-popup'
        }
      });
    })
    .catch(error => {
      console.error('Error fetching order details:', error);
      Swal.fire('Error', 'Failed to fetch order details.', 'error');
    });
}




const changeOrderStatus = async (orderId, newStatus) => {
  try {
  
    Swal.fire({
      title: "Processing...",
      text: "Updating order status",
      icon: "info",
      allowOutsideClick: false,
      showConfirmButton: false
    });
    
    const response = await fetch('/admin/orders/change-status', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ orderId, newStatus }),
    });


    Swal.close();

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      throw new Error(errorData.message || 'Failed to update order status');
    }

    await Swal.fire({
  title: "Success!",
  text: "Order status has been updated successfully",
  icon: "success",
  confirmButtonText: "OK"
})
 .then((result) => {
  if (result.isConfirmed) {
    location.reload(); 
  }
});
    const statusCell = document.querySelector(`#order_${orderId}`);
    if (statusCell) {

      const selectElement = statusCell.querySelector('select');
      if (selectElement) {
        selectElement.value = newStatus;
      }
    }

  } catch (error) {
    console.error('Error:', error.message);
    
  
    await Swal.fire({
      title: "Error!",
      text: error.message || "Something went wrong while updating the order status",
      icon: "error",
      confirmButtonText: "OK"
    });
  }
};


const submitStatusChange = async (event) => {
  event.preventDefault();
  const form = event.target;
  const orderId = form.querySelector('button').getAttribute('data-order-id');
  const status = form.querySelector('select[name="status"]').value;
  await changeOrderStatus(orderId, status);
};

document.addEventListener('DOMContentLoaded', () => {
  const statusForms = document.querySelectorAll('[id^="statusForm_"]');
  statusForms.forEach(form => {
    form.addEventListener('submit', submitStatusChange);
  });
});











async  function cancelOrder(orderId) {

const reasonResult = await Swal.fire({
title: 'Select Cancellation Reason',
input: 'select',
inputOptions: {
'out_of_stock': 'Item is out of stock',
  'fraud_suspicion': 'Suspected fraudulent activity',
  'payment_issue': 'Payment not completed or issues with transaction',
  'pricing_error': 'Pricing or listing error',
  'logistics_issue': 'Logistics or delivery issue',
  'customer_request': 'Cancelled per customer’s request',
  'policy_violation': 'Order violates company policies',
  'other': 'Other reason',
},
inputPlaceholder: 'Select a reason',
showCancelButton: true,
inputValidator: (value) => {
    if (!value) {
        return 'Please select a reason!'
    }
}
});

if (reasonResult.isDismissed) {
return;
}

Swal.fire({
    title: 'Are you sure?',
    text: "You want to cancel this order?",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, cancel it!',
    cancelButtonText: 'No, keep it'
}).then(async (result) => {
    if (result.isConfirmed) {

        try {
            const response = await fetch('/admin/orders/cancel', {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, cancelReason: reasonResult.value }),
            });

            const data = await response.json();

            if (response) {
                Swal.fire({
                    title: 'Success!',
                    text: data.message || 'Order has been cancelled.',
                    icon: 'success',
                }).then(() => {
                    location.reload();
                });
            } 
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error!',
                text: 'Something went wrong. Please try again later.',
                icon: 'error',
            });
        }
    }
});
}









  </script>
</body>

</html>