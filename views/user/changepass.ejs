<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Change Password</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.min.css">
  <style>
 /* Card Container */
.card {
    background: linear-gradient(to bottom right, #ffffff, #fafafa);
    border-radius: 16px;
    box-shadow: 
        0 4px 20px rgba(0, 0, 0, 0.05),
        0 8px 32px rgba(74, 144, 226, 0.08);
    max-width: 450px;
    margin: 2rem auto;
    padding: 2.5rem;
    position: relative;
    isolation: isolate;
    border: 1px solid rgba(74, 144, 226, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card:hover {
    transform: translateY(-4px);
    box-shadow: 
        0 8px 28px rgba(0, 0, 0, 0.08),
        0 16px 40px rgba(74, 144, 226, 0.12);
}

/* Card Header */
.card h2 {
    color: #1a2b4e;
    font-size: clamp(1.5rem, 3vw, 1.75rem);
    margin: 0 0 2rem 0;
    text-align: center;
    font-weight: 700;
    letter-spacing: -0.02em;
    position: relative;
}

.card h2::after {
    content: '';
    position: absolute;
    bottom: -0.75rem;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(to right, #4A90E2, #357ABD);
    border-radius: 3px;
}

/* Form Styling */
#change-password-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

/* Input Groups */
.input-group {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    position: relative;
}

/* Labels */
.input-group label {
    color: #445577;
    font-size: 0.95rem;
    font-weight: 600;
    transition: color 0.2s ease;
}

.input-group:focus-within label {
    color: #4A90E2;
}

/* Input Fields */
.input-group input {
    padding: 1rem 1.25rem;
    border: 2px solid #e1e8f0;
    border-radius: 12px;
    font-size: 1rem;
    transition: all 0.25s ease;
    background-color: #f8fafc;
    color: #334155;
}

.input-group input::placeholder {
    color: #94a3b8;
}

.input-group input:hover {
    border-color: #cbd5e1;
    background-color: #ffffff;
}

.input-group input:focus {
    outline: none;
    border-color: #4A90E2;
    background-color: #ffffff;
    box-shadow: 0 0 0 4px rgba(74, 144, 226, 0.15);
}

/* Submit Button */
.btn {
    background: linear-gradient(135deg, #4A90E2, #357ABD);
    color: white;
    border: none;
    border-radius: 12px;
    padding: 1rem 2rem;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 1rem;
    position: relative;
    overflow: hidden;
}

.btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(255,255,255,0.2), rgba(255,255,255,0));
    transform: translateX(-100%) rotate(45deg);
    transition: transform 0.5s ease;
}

.btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(74, 144, 226, 0.25);
}

.btn:hover::before {
    transform: translateX(100%) rotate(45deg);
}

.btn:active {
    transform: translateY(1px);
}

/* Validation States */
.input-group input:invalid:not(:placeholder-shown) {
    border-color: #ffffff;
    background-color: #fff5f5;
}

.input-group input:valid:not(:placeholder-shown) {
    border-color: #28A745;
    background-color: #f0fff4;
}

/* Back Button */
.dash {
    display: inline-flex;
    align-items: center;
    padding: 0.875rem 1.5rem;
    background: linear-gradient(135deg, #1a73e8, #1557b0);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 0.95rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    text-decoration: none;
    position: relative;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(26, 115, 232, 0.25);
}

.dash::before {
    content: "←";
    margin-right: 0.75rem;
    font-size: 1.25rem;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.dash:hover {
    background: linear-gradient(135deg, #1557b0, #1244a0);
    transform: translateX(-4px);
    box-shadow: 0 4px 12px rgba(26, 115, 232, 0.35);
}

.dash:hover::before {
    transform: translateX(-4px);
}

.dash:active {
    transform: translateX(-2px);
    box-shadow: 0 2px 4px rgba(26, 115, 232, 0.2);
}

.dash:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(26, 115, 232, 0.4);
}

/* Responsive Design */
@media (max-width: 480px) {
    .card {
        margin: 1rem;
        padding: 1.5rem;
        border-radius: 12px;
    }
    
    .input-group input {
        padding: 0.875rem 1rem;
    }
    
    .btn, .dash {
        width: 100%;
        justify-content: center;
    }
    
    .card h2 {
        font-size: 1.25rem;
    }
}

/* Dark Mode Support */
@media (prefers-color-scheme: dark) {
    .card {
        background: linear-gradient(to bottom right, #1a2234, #151b29);
        border-color: rgba(74, 144, 226, 0.2);
    }
    
    .card h2 {
        color: #ffffff;
    }
    
    .input-group label {
        color: #a8b3cf;
    }
    
    .input-group input {
        background-color: #1f2937;
        border-color: #374151;
        color: #ffffff;
    }
    
    .input-group input::placeholder {
        color: #6b7280;
    }
    
    .input-group input:hover {
        background-color: #242f41;
        border-color: #4b5563;
    }
    
    .input-group input:focus {
        background-color: #242f41;
    }
}/* Password Input Container */
.input-group {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-bottom: 1.5rem;
}

/* Label Styling */
.input-group label {
    color: #374151;
    font-size: 0.95rem;
    font-weight: 600;
    transition: color 0.2s ease;
}

.input-group:focus-within label {
    color: #2563eb;
}

/* Input Field */
.input-group input[type="password"],
.input-group input[type="text"] {
    width: 100%;
    padding: 1rem 3rem 1rem 1.25rem;
    border: 2px solid #e5e7eb;
    border-radius: 12px;
    font-size: 1rem;
    line-height: 1.5;
    color: #1f2937;
    background-color: #fff;
    transition: all 0.2s ease-in-out;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
}

.input-group input:hover {
    border-color: #d1d5db;
}

.input-group input:focus {
    outline: none;
    border-color: #2563eb;
    box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.1);
}

/* Toggle Password Button */
.toggle-password {
    position: absolute;
    right: 1rem;
    bottom: 0.85rem;
    background: transparent;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    font-size: 1.25rem;
    color: #6b7280;
    z-index: 2;
}

.toggle-password:hover {
    color: #4b5563;
    background-color: #f3f4f6;
    transform: scale(1.05);
}

.toggle-password:active {
    transform: scale(0.95);
}

/* Password Strength Indicator (optional) */
.input-group::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 3px;
    border-radius: 0 0 4px 4px;
    transition: width 0.3s ease, background-color 0.3s ease;
}

/* Password Strength Colors */
.input-group.weak::after {
    background-color: #ef4444;
    width: 33%;
}

.input-group.medium::after {
    background-color: #f59e0b;
    width: 66%;
}

.input-group.strong::after {
    background-color: #10b981;
    width: 100%;
}

/* Password Requirements List (optional) */
.password-requirements {
    margin-top: 0.5rem;
    font-size: 0.875rem;
    color: #6b7280;
    list-style: none;
    padding: 0;
}

.password-requirements li {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.25rem;
}

.password-requirements li::before {
    content: '•';
    color: #d1d5db;
}

.password-requirements li.valid::before {
    content: '✓';
    color: #10b981;
}

/* Dark Mode Support */
@media (prefers-color-scheme: dark) {
    .input-group label {
        color: #e5e7eb;
    }

    .input-group:focus-within label {
        color: #60a5fa;
    }

    .input-group input[type="password"],
    .input-group input[type="text"] {
        background-color: #1f2937;
        border-color: #374151;
        color: #f3f4f6;
    }

    .input-group input:hover {
        border-color: #4b5563;
    }

    .input-group input:focus {
        border-color: #60a5fa;
        box-shadow: 0 0 0 4px rgba(96, 165, 250, 0.1);
    }

    .toggle-password {
        color: #9ca3af;
    }

    .toggle-password:hover {
        color: #e5e7eb;
        background-color: #374151;
    }

    .password-requirements {
        color: #9ca3af;
    }

    .password-requirements li::before {
        color: #4b5563;
    }
}

/* Responsive Adjustments */
@media (max-width: 640px) {
    .input-group input[type="password"],
    .input-group input[type="text"] {
        padding: 0.875rem 2.75rem 0.875rem 1rem;
        font-size: 0.95rem;
    }

    .toggle-password {
        right: 0.75rem;
        bottom: 0.75rem;
        padding: 0.375rem;
        font-size: 1.125rem;
    }
}

/* Animations */
@keyframes eyeBlink {
    0%, 100% { transform: scaleY(1); }
    50% { transform: scaleY(0.1); }
}

.toggle-password:focus {
    animation: eyeBlink 0.5s;
    outline: none;
}

/* Error State */
.input-group.error input {
    border-color: #ef4444;
    background-color: #fef2f2;
}

.input-group.error label {
    color: #ef4444;
}

/* Success State */
.input-group.success input {
    border-color: #10b981;
    background-color: #f0fdf4;
}

.input-group.success label {
    color: #10b981;
}
  </style>
</head>
<body>
  <button class="dash" onclick="window.location.href='/profile/<%= user._id %>'">Profile</button>
    <div class="card">
        <h2>Change Password</h2>
        <form id="change-password-form" >
       
          <input type="hidden" id="user-id" name="userId" value="<%= userId %>">
        
          <div class="input-group">
            <label for="current-password">Current Password</label>
            <input type="password" id="current-password" name="currentPassword" >
          </div>
        
          <div class="input-group">
            <label for="new-password">New Password</label>
            <input type="password" id="new-password" name="newPassword" >
            <button type="button" class="toggle-password" onclick="togglePasswordVisibility()">👀</button>
          </div>
        
          <div class="input-group">
            <label for="confirm-password">Confirm New Password</label>
            <input type="password"  id="confirm-password" name="confirmPassword" >
          
          </div>
        
          <button type="submit" class="btn">Change Password</button>
          <div id="message"></div>
        </form>
    </div>

    <script>
      
      const form = document.getElementById('change-password-form');
      const messageDiv = document.getElementById('message'); 

      form.addEventListener('submit', async function(event) {
        event.preventDefault();

        messageDiv.innerHTML = '';

        const userId = document.getElementById('user-id').value;
        const currentPassword = document.getElementById('current-password').value;
        const newPassword = document.getElementById('new-password').value;
        const confirmPassword = document.getElementById('confirm-password').value;

        if (!currentPassword || !newPassword || !confirmPassword) {
          messageDiv.innerHTML = '<p style="color: red;">Please fill out all fields.</p>';
          return;
        }

        if (newPassword !== confirmPassword) {
          messageDiv.innerHTML = '<p style="color: red;">New password and confirm password do not match.</p>';
          return;
        }

        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

        if (!passwordRegex.test(confirmPassword)) {
          messageDiv.innerHTML = '<p style="color: red;">New password must be at least 8 characters long, with at least one uppercase letter, one lowercase letter, one number, and one special character.</p>';
          return;
        }

        try {
            const response = await fetch('/changePass', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userId, currentPassword, newPassword, confirmPassword })
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.message || 'Something went wrong');
            }

            Swal.fire({
                title: "Success!",
                text: data.message,
                icon: "success",
                button: "OK"
            });

            form.reset();
        } catch (error) {
            Swal.fire({
                title: "Error!",
                text: error.message,
                icon: "error",
                button: "Try Again"
            });
        }

      });






      function togglePasswordVisibility() {
  const passwordInput = document.getElementById('new-password');
  const pass = document.getElementById('current-password')
  const toggleButton = document.querySelector('.toggle-password');
  
 
  if (passwordInput.type === 'password') {
      passwordInput.type = 'text';
      pass.type = 'text';
      toggleButton.textContent = '😑';  
  } else {
      passwordInput.type = 'password';
      pass.type ='password';
      toggleButton.textContent = '👀';  
  }
}


    </script>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>






</body>
</html>