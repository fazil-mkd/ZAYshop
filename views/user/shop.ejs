<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/css/shop.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>

</head>
<body>
    <%- include("../../views/partials/user/header") %>

    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Shop</h4>
                        <div class="breadcrumb__links">
                            <a href="/">Home</a>
                            <span>Shop</span>
                        </div>
                    </div>
                </div>
              
            </div>
            <div 
        id="success-alert" 
        class="custom-alert custom-alert-success animate-in" 
        role="alert"
        data-message="<%= successMessage %>"
    >
        <div class="alert-icon">✓</div>
        <div class="alert-content"></div>
    </div>

    <div 
        id="error-alert" 
        class="custom-alert custom-alert-error animate-in" 
        role="alert"
        data-message="<%= errorMessage %>"
    >
        <div class="alert-icon">!</div>
        <div class="alert-content"></div>
    </div>
        </div>
    </section>

    <section class="shop-section">
        <div class="container">
            <div class="row">
           
                <div class="col-lg-3">
                    <div class="shop__sidebar">
                     
                        <div class="shop__sidebar__accordion">
                            <div class="accordion" id="accordionExample">
                                <div class="card">
                                    <div class="card-heading">
                                       
                                    </div>
                                    <div id="collapseOne" class="collapse show" data-parent="#accordionExample">
                                        <div class="card-body">
                                            <select id="sort-select" class="form-select">
                                                <option value="">Default</option>
                                                <option value="low-to-high" <%=sortOption==='low-to-high' ? 'selected' : '' %>>Price: Low to High</option>
                                                <option value="high-to-low" <%=sortOption==='high-to-low' ? 'selected' : '' %>>Price: High to Low</option>
                                                <option value="latest" <%=sortOption==='latest' ? 'selected' : '' %>>Latest</option>
                                                <option value="A-Z" <%=sortOption==='A-Z' ? 'selected' : '' %>>Alphabetical: A-Z</option>
                                                <option value="Z-A" <%=sortOption==='Z-A' ? 'selected' : '' %>>Alphabetical: Z-A</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                       
                        <div class="filter-section">
                            <h4>Price Range</h4>
                            <div class="price-filter">
                                <input type="range" id="price-range" min="1000" max="10000" step="100" value="10000">
                                <div class="price-values">
                                    <span>₹0</span>
                                    <span id="price-value">₹10000</span>
                                </div>
                            </div>
                        </div>

                     
                        <div class="filter-section">
                            <h4>Brands</h4>
                            <div class="brand-filters">
                                <% if (Array.isArray(brands) && brands.length > 0) { %>
                                    <% brands.forEach(brand => { %>
                                        <div class="form-check">
                                            <input class="form-check-input brand-checkbox" 
                                                   type="checkbox" 
                                                   value="<%= brand %>" 
                                                   id="brand-<%= brand %>">
                                            <label class="form-check-label" for="brand-<%= brand %>">
                                                <%= brand %>
                                            </label>
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <p>No brands available.</p>
                                <% } %>
                            </div>
                        </div>

                        
                        <div class="filter-section">
                            <h4>Categories</h4>
                            <div class="category-filters">
                                <% categories.forEach(category => { %>
                                    <div class="form-check">
                                        <input class="form-check-input category-checkbox" 
                                               type="checkbox" 
                                               value="<%= category._id %>" 
                                               id="category-<%= category._id %>">
                                        <label class="form-check-label" for="category-<%= category._id %>">
                                            <%= category.name %>
                                        </label>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                            
                    </div>
                </div>

               
                <div class="col-lg-9">
                    <div class="shop__product__content">
                        <% let currentDate = new Date(); %>
                        <div class="row" id="products-container">
                            <% products.forEach(product => { %>
                                <div class="col-lg-4 col-md-6 col-sm-6">
                                    <div class="product__item">
                                        <div class="product__item__pic">
                                            <a href="/product/<%= product._id %>">
                                                <img src="<%= product.cloudinaryImages[0] %>" alt="<%= product.name %>">

                                            </a>
                                        </div>
                                        
                                        <div class="product__item__text">
                                            <h6><%= product.name %></h6>
                                            <button
                                            class="wishlistBtn p-2 rounded-full hover:bg-gray-100 transition-colors"
                                            aria-label="<%= product.isInWishlist ? 'Remove from wishlist' : 'Add to wishlist' %>"
                                            data-product-id="<%= product._id %>"
                                            onclick="toggleWishlist(this)"
                                          >
                                            <i class="fa fa-heart <%= product.isInWishlist ? 'text-red-500 fill-red-500' : 'text-gray-600 hover:text-red-500' %>"></i>
                                          </button>
                                            <div class="rating">
                                              <% for(let i = 1; i <= 5; i++) { %>
                                                <i class="fa fa-star<%= i <= product.rating ? '' : '-o' %>"></i>
                                              <% } %>
                                            </div>
                                            <h5>
                                                <% let offerStartDate = new Date(product.offerStartDate) %>
                                                <% let offerEndDate = new Date(product.offerEndDate); %>
                                                <% if (product.offerPrice && offerEndDate >= currentDate&&offerStartDate<=currentDate&&product.offerPrice!=product.price) { %>
                                                    <span class="text-success">₹<%= product.offerPrice %></span>
                                                    <span class="text-muted text-decoration-line-through">₹<%= product.price %></span>
                                                <% } else { %>
                                                    <span >₹<%= product.price %></span>
                                                <% } %>
                                            </h5>
                                        </div>
                                    </div>
                                    <span style="display: none;" data-user-id="<%= userId %>"></span>
                                </div>
                            <% }); %>
                        </div>

                      
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="pagination__wrapper">
                                    <% if (totalPages > 1) { %>
                                        <ul class="pagination">
                                            <% if (currentPage > 1) { %>
                                                <li class="page-item">
                                                    <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
                                                </li>
                                            <% } %>
                                            
                                            <% for(let i = 1; i <= totalPages; i++) { %>
                                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                                </li>
                                            <% } %>
                                            
                                            <% if (currentPage < totalPages) { %>
                                                <li class="page-item">
                                                    <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                                                </li>
                                            <% } %>
                                        </ul>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <%- include("../../views/partials/user/footer") %>

<script>



document.addEventListener('DOMContentLoaded', function() {

    const productsContainer = document.getElementById('products-container');
    const priceRange = document.getElementById('price-range');
    const priceValue = document.getElementById('price-value');
    const sortSelect = document.getElementById('sort-select');
    const brandCheckboxes = document.querySelectorAll('.brand-checkbox');
    const categoryCheckboxes = document.querySelectorAll('.category-checkbox');
    const colorCheckboxes = document.querySelectorAll('.color-checkbox');

    function debounce(func, wait) {
        let timeout;
        return function executedFunction(...args) {
            const later = () => {
                clearTimeout(timeout);
                func(...args);
            };
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    priceRange.addEventListener('input', function() {
        priceValue.textContent = `₹${this.value}`;
    });

    function getActiveFilters() {
        const filters = {
            maxPrice: priceRange.value,
            brands: Array.from(brandCheckboxes)
                .filter(cb => cb.checked)
                .map(cb => cb.value),
            categories: Array.from(categoryCheckboxes)
                .filter(cb => cb.checked)
                .map(cb => cb.value),
            colors: Array.from(colorCheckboxes)
                .filter(cb => cb.checked)
                .map(cb => cb.value),
            sortOption: sortSelect.value
        };

        return filters;
    }


    function updateURL(filters) {
        const params = new URLSearchParams();
        
        if (filters.maxPrice) params.set('maxPrice', filters.maxPrice);
        if (filters.brands.length) params.set('brands', filters.brands.join(','));
        if (filters.categories.length) params.set('categories', filters.categories.join(','));
        if (filters.colors.length) params.set('colors', filters.colors.join(','));
        if (filters.sortOption) params.set('sortOption', filters.sortOption);
        
        const newURL = `${window.location.pathname}?${params.toString()}`;
        window.history.pushState({ path: newURL }, '', newURL);
    }

   
    function renderProducts(products) {
        productsContainer.innerHTML = products.map(product => `
            <div class="col-lg-4 col-md-6 col-sm-6">
                <div class="product__item">
                    <div class="product__item__pic">
                        <a href="/product/${product._id}">
                            <img src="${product.cloudinaryImages[0]}" alt="${product.name}">
                        </a>
                    </div>
                    <div class="product__item__text">
                        <h6>${product.name}</h6>
                        <div class="rating">
                            ${Array(5).fill(0).map((_, i) => 
                                `<i class="fa fa-star${i < product.rating ? '' : '-o'}"></i>`
                            ).join('')}
                        </div>
                        <h5>
                            ${product.offerPrice ? 
                                `<span class="text-success">₹${product.offerPrice}</span>
                                 <span class="text-muted text-decoration-line-through">₹${product.price}</span>` :
                                `₹${product.price}`
                            }
                        </h5>
                    </div>
                </div>
            </div>
        `).join('');
    }

   
    const fetchFilteredProducts = debounce(async function() {
        try {
            const filters = getActiveFilters();
            updateURL(filters);

            const params = new URLSearchParams();
            Object.entries(filters).forEach(([key, value]) => {
                if (Array.isArray(value)) {
                    if (value.length) params.append(key, value.join(','));
                } else if (value) {
                    params.append(key, value);
                }
            });

            const response = await fetch(`/shop/filter?${params.toString()}`);
            const data = await response.json();

            if (data.success) {
                renderProducts(data.products);
                window.location.reload();
            } else {
                console.error('Error fetching products:', data.message);
            }
        } catch (error) {
            console.error('Error fetching products:', error);
        }
    }, 300);

 
    priceRange.addEventListener('change', fetchFilteredProducts);
    sortSelect.addEventListener('change', fetchFilteredProducts);
    
    brandCheckboxes.forEach(checkbox => 
        checkbox.addEventListener('change', fetchFilteredProducts));
    
    categoryCheckboxes.forEach(checkbox => 
        checkbox.addEventListener('change', fetchFilteredProducts));
    
    colorCheckboxes.forEach(checkbox => 
        checkbox.addEventListener('change', fetchFilteredProducts));

   
    function initializeFiltersFromURL() {
        const params = new URLSearchParams(window.location.search);
        
        const maxPrice = params.get('maxPrice');
        if (maxPrice) {
            priceRange.value = maxPrice;
            priceValue.textContent = `₹${maxPrice}`;
        }


        const sortOption = params.get('sortOption');
        if (sortOption) {
            sortSelect.value = sortOption;
        }


        const brands = params.get('brands')?.split(',') || [];
        const categories = params.get('categories')?.split(',') || [];
        const colors = params.get('colors')?.split(',') || [];

        brands.forEach(brand => {
            const checkbox = document.querySelector(`#brand-${brand}`);
            if (checkbox) checkbox.checked = true;
        });

        categories.forEach(category => {
            const checkbox = document.querySelector(`#category-${category}`);
            if (checkbox) checkbox.checked = true;
        });

        colors.forEach(color => {
            const checkbox = document.querySelector(`#color-${color}`);
            if (checkbox) checkbox.checked = true;
        });
    }

    initializeFiltersFromURL();
});




async function toggleWishlist(button) {
    const productId = button.getAttribute("data-product-id");
    const heartIcon = button.querySelector("i");
    const isInWishlist = heartIcon.classList.contains("text-red-500");

    const endpoint = isInWishlist ? "/wishlist/remove" : "/wishlist/add";
    
    button.disabled = true;
    
    try {

        const response = await fetch(endpoint, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                userId: getUserId(), 
                productId,
            }),
        });
        
        const data = await response.json();
        
        if (response.ok) {
         
            if (isInWishlist) {
               
                heartIcon.classList.remove("text-red-500", "fill-red-500");
                heartIcon.classList.add("text-gray-600", "hover:text-red-500");
                button.setAttribute("aria-label", "Add to wishlist");
                showNotification("Product removed from wishlist!", "success");
            } else {
               
                heartIcon.classList.remove("text-gray-600", "hover:text-red-500");
                heartIcon.classList.add("text-red-500", "fill-red-500");
                button.setAttribute("aria-label", "Remove from wishlist");
                showNotification("Product added to wishlist!", "success");
            }
           
            heartIcon.classList.add("animate-beat");
         
            setTimeout(() => heartIcon.classList.remove("animate-beat"), 1000);
        } else {
            showNotification("Failed to update wishlist", "error");
        }
    } catch (error) {
        showNotification("Error toggling wishlist", "error");
        console.error("Error:", error);
    } finally {
       
        button.disabled = false;
    }
}


function showNotification(message, type = "success") {
    
    const existingNotification = document.getElementById('wishlist-notification');
    if (existingNotification) {
        existingNotification.remove();
    }
    
    
    const notification = document.createElement('div');
    notification.id = 'wishlist-notification';
    notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 transform transition-all duration-300 ${
        type === 'success' ? 'bg-green-500' : 'bg-red-500'
    } text-white`;
    notification.textContent = message;
    
   
    document.body.appendChild(notification);
    
 
    setTimeout(() => {
        notification.style.opacity = '0';
        setTimeout(() => {
            notification.remove();
        }, 300);
    }, 3000);
}


function getUserId() {
    const userIdElement = document.querySelector('[data-user-id]');
    const userId = userIdElement.getAttribute('data-user-id');
    console.log("User ID:", userId);
    return document.body.dataset.userId || userId;
}


const style = document.createElement('style');
style.textContent = `
    @keyframes heartBeat {
        0% { transform: scale(1); }
        14% { transform: scale(1.3); }
        28% { transform: scale(1); }
        42% { transform: scale(1.3); }
        70% { transform: scale(1); }
    }
    
    .animate-beat {
        animation: heartBeat 1s ease-in-out;
    }
    
    #wishlist-notification {
        opacity: 1;
        transition: opacity 0.3s ease-in-out;
    }
`;
document.head.appendChild(style);



document.addEventListener('DOMContentLoaded', function() {

  function showAlert(type, message) {
    const alert = document.getElementById(type + '-alert');
    alert.textContent = message;
    alert.style.display = 'flex';
    alert.classList.add('animate-in');
    

    setTimeout(() => {
      alert.style.display = 'none';
    }, 5000);
  }
  

  function hideAlert(type) {
    const alert = document.getElementById(type + '-alert');
    alert.style.display = 'none';
  }
});







function initializeFlashMessages() {
            const successAlert = document.getElementById('success-alert');
            const errorAlert = document.getElementById('error-alert');

            function showAlertIfMessageExists(alertElement) {
                const message = alertElement.getAttribute('data-message');
                const contentElement = alertElement.querySelector('.alert-content');

                if (message && message !== 'undefined' && message.trim() !== '') {
                    contentElement.textContent = message;
                    alertElement.classList.add('show');

                    setTimeout(() => {
                        alertElement.classList.remove('show');
                        alertElement.setAttribute('data-message', '');
                    }, 5000);
                }
            }

            showAlertIfMessageExists(successAlert);
            showAlertIfMessageExists(errorAlert);
        }

        document.addEventListener('DOMContentLoaded', initializeFlashMessages);

</script>






</body>
</html>