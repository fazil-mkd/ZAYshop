<!DOCTYPE html>
<html lang="zxx">

<head>
    <meta charset="UTF-8">
    <meta name="description" content="Male_Fashion Template">
    <meta name="keywords" content="Male_Fashion, unica, creative, html">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Zay || Cart</title>

    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap"
        rel="stylesheet">

    <link rel="stylesheet" href="/assets/newcss/bootstrap.min.css" type="text/css">
    <link rel="stylesheet" href="/assets/newcss/magnific-popup.css" type="text/css">
    <link rel="stylesheet" href="/assets/newcss/nice-select.css" type="text/css">
    <link rel="stylesheet" href="/assets/newcss/owl.carousel.min.css" type="text/css">
    <link rel="stylesheet" href="/assets/newcss/slicknav.min.css" type="text/css">
    <link rel="stylesheet" href="/assets/newcss/style.css" type="text/css">
    <link rel="stylesheet" href="/assets/css/shoppingCart.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.7/dist/sweetalert2.min.css">
</head>

<body>
    <!-- Page Preloder -->
    <%- include("../../views/partials/user/header") %>

        <!-- Breadcrumb Section Begin -->
        <section class="breadcrumb-option">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="breadcrumb__text">
                            <h4>Shopping Cart</h4>
                            <div class="breadcrumb__links">
                                <a href="./">Home</a>
                                <span class="separator">/</span>
                                <a href="./shop">Shop</a>
                                <span class="separator">/</span>
                                <span>Shopping Cart</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!-- Breadcrumb Section End -->

        <!-- Shopping Cart Section Begin -->
        <section class="shopping-cart spad">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8">
                        <div class="shopping__cart__table">
                            <table>
                                <thead>
                                    <tr>
                                        <th class="card-header">Product</th>
                                        <th class="card-header">Quantity</th>
                                        <th class="card-header">Price</th>
                                        <th class="card-header">Size/Color</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if(cartItems && cartItems.length> 0) { %>
                                        <% cartItems.forEach(item=> { %>
                                            <tr class="remove" id="row-<%= item._id %>">
                                                <td class="product__cart__item">
                                                    <div class="product__cart__item__pic">
                                                        <% if (item.cloudinaryImages && item.cloudinaryImages.length> 0)
                                                            { %>
                                                            <img src="<%= item.cloudinaryImages[0] %>"
                                                                alt="<%= item.name %>">
                                                            <% } else { %>
                                                                <p>No Image Available</p>
                                                                <% } %>
                                                    </div>
                                                    <div class="product__cart__item__text">
                                                        <h4>
                                                            <%= item.name %>
                                                        </h4>
                                                        <h5>$<%= item.totalPrice %>
                                                                <P style="display: none;" id="stockToCheck">
                                                                    <%= JSON.stringify(stockData) %>
                                                                </P>
                                                        </h5>
                                                        
                                                    </div>
                                                </td>
                                                <td class="quantity__item">
                                                    <div class="quantity">
                                                        <div class="pro-qty-2">
                                                            <button class="qty-btn minus" data-item-id="<%= item._id %>"
                                                                data-size="<%= item.size %>"
                                                                data-color="<%= item.color %>"
                                                                onclick="updateQuantity('<%= item._id %>', event)">
                                                                -
                                                            </button>
                                                            <input type="text" value="<%= item.quantity %>"
                                                                id="quantity-<%= item._id %>-<%= item.size %>-<%= item.color %>"
                                                                readonly>
                                                            <P style="display: none;">
                                                                <%= JSON.stringify(stockData) %>
                                                            </P>
                                                            <button class="qty-btn plus" data-item-id="<%= item._id %>"
                                                                data-size="<%= item.size %>"
                                                                data-color="<%= item.color %>"
                                                                onclick="updateQuantity('<%= item._id %>', event)">
                                                                +
                                                            </button>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td id="itemTotalPrice<%= item._id %>" class="cart__price">
                                                    <%= item.totalPrice %>
                                                </td>
                                                <td class="cart__price">
                                                    <%= item.size %>
                                                </td>
                                                <td class="cart__price">
                                                    <%= item.color %>
                                                </td>
                                                <td class="cart__close"><i class="fa fa-close"></i></td>
                                                <td class="remove" id="<%= item._id %>">
                                                    <button
                                                        onclick="removeItem('<%= item._id %>', '<%= item.color %>', '<%= item.size %>')">Remove</button>
                                                </td>
                                            </tr>
                                            <% }); %>
                                                <% } else { %>
                                                    <tr>
                                                        <td colspan="4">Your cart is empty</td>
                                                    </tr>
                                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="continue__btn">
                                    <a style="text-decoration: none;" href="/shop">Continue Shopping</a>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-lg-4">

                    <div class="cart__total">
                        <h6>Cart total</h6>
                        <ul>
                            <li>Subtotal <span>
                                    <%= cartItems.reduce((total, item)=> total + (item.totalPrice), 0)
                                        %>
                                </span></li>
                            <li>Total <span>
                                    <%= cartItems.reduce((total, item)=> total + (item.totalPrice), 0)
                                        %>
                                </span></li>
                        </ul>
                        <% if (cartItems.length===0) { %>
                            <a style="text-decoration: none;" href="/shop">Continue Shopping</a>
                            <% } else { %>
                                <a style="text-decoration: none;" href="/checkout" class="primary-btn">Proceed to
                                    checkout</a>
                                <% } %>

                    </div>
                </div>
        </section>

        <%- include("../../views/partials/user/footer") %>

            <div class="search-model">
                <div class="h-100 d-flex align-items-center justify-content-center">
                    <div class="search-close-switch">+</div>
                    <form class="search-model-form">
                        <input type="text" id="search-input" placeholder="Search here.....">
                    </form>
                </div>
            </div>
            <!-- Shopping Cart Section End -->

            <!-- Footer Section Begin -->
            <%- include("../../views/partials/user/footer") %>

                <div class="search-model">
                    <div class="h-100 d-flex align-items-center justify-content-center">
                        <div class="search-close-switch">+</div>
                        <form class="search-model-form">
                            <input type="text" id="search-input" placeholder="Search here.....">
                        </form>
                    </div>
                </div>

                <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

                <script id="stock-data" type="application/json">
        <%= JSON.stringify(stockData) %>
     
    </script>

                <script>

                    var stockDatas = document.getElementById('stockToCheck').textContent;
                    var stockData = JSON.parse(stockDatas);


                    function updateQuantity(itemId, event) {
                        const button = event.target;
                        const isIncrease = button.classList.contains('plus');
                        const change = isIncrease ? 1 : -1;


                        const size = button.getAttribute('data-size');
                        const color = button.getAttribute('data-color');

                        console.log("Size:", size);
                        console.log("Color:", color);

          const productStock = Object.values(stockData)[0];


           const stock = productStock?.[color]?.[size] ?? "Size/Color not found";

                        if (!size || !color) {
                            swal({
                                title: "Invalid Product Attributes",
                                text: "Size and color must be selected before updating the quantity.",
                                icon: "error",
                                button: "OK",
                            });
                            return;
                        }


                        const quantityInputId = `quantity-${itemId}-${size}-${color}`;
                     
                        const quantityInput = document.getElementById(quantityInputId);

                        if (!quantityInput) {
                            console.error(`Quantity input not found for: ${itemId}, ${size}, ${color}`);
                            return;
                        }


                        let currentQuantity = parseInt(quantityInput.value, 10);
                        const updatedQuantity = currentQuantity + change;

                        if (updatedQuantity < 1) {
                            swal({
                                title: "Minimum Quantity Reached",
                                text: "Quantity cannot be less than 1.",
                                icon: "warning",
                                button: "OK",
                            });
                            return;
                        }

                        if (updatedQuantity > stock) {
                            swal({
                                title: "Limit Exceeded",
                                text: `Sorry, we only have ${stock} available as stock.`,
                                icon: "error",
                                button: "OK",
                            });
                            return;
                        }


                        if (updatedQuantity > 10) {
                            swal({
                                title: " Limit Exceeded",
                                text: `Only 10 items are can buy`,
                                icon: "error",
                                button: "OK",
                            });
                            return;
                        }

                        quantityInput.value = updatedQuantity;


                        const loadingOverlay = createLoadingOverlay(itemId);
                        document.body.appendChild(loadingOverlay);


                        updateQuantityOnServer(itemId, updatedQuantity, size, color, loadingOverlay, change);
                    }



                    function createLoadingOverlay(itemId) {
                        const overlay = document.createElement('div');
                        overlay.id = `loading-overlay-${itemId}`;
                        overlay.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    `;
                        overlay.innerHTML = '<div class="spinner"></div>';
                        return overlay;
                    }

                    function updatePriceElements(data, itemId) {

                        const itemPriceElement = document.getElementById(`itemTotalPrice${itemId}`);

                        if (itemPriceElement) {
                            itemPriceElement.innerHTML = `${data.itemTotalPrice}`;
                        }

                        const listItems = document.querySelectorAll('li');
                        listItems.forEach(li => {
                            const textContent = li.textContent.trim().toLowerCase();
                            const spanElement = li.querySelector('span');

                            if (spanElement) {
                                if (textContent.includes('subtotal')) {
                                    spanElement.innerHTML = `${data.cartSubtotal}`;
                                } else if (textContent.includes('total') && !textContent.includes('subtotal')) {
                                    spanElement.innerHTML = `${data.cartTotal}`;
                                }
                            }
                        });
                    }

                    function updateQuantityOnServer(itemId, updatedQuantity, size, color, loadingOverlay, change) {

                        fetch('/update-quantity', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                itemId,
                                updatedQuantity,
                                size,
                                color
                            })
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {

                                    updatePriceElements(data, itemId);

                                    const successMessage = document.createElement('div');
                                    successMessage.className = 'update-success';
                                    successMessage.textContent = 'Cart updated successfully';
                                    successMessage.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: #4CAF50; 
                padding: 10px 20px;
                border-radius: 4px;
            `;
                                    document.body.appendChild(successMessage);


                                    setTimeout(() => {
                                        successMessage.style.opacity = '1';
                                        setTimeout(() => {
                                            successMessage.style.opacity = '0';
                                            setTimeout(() => {
                                                successMessage.remove();
                                            }, 300);
                                        }, 2000);
                                    }, 100);

                                } else {

                                    const quantityInput = document.getElementById(`quantity-${itemId}`);
                                    quantityInput.value = parseInt(quantityInput.value, 10) - change;

                                    swal({
                                        title: "Error",
                                        text: data.message,
                                        icon: "error",
                                        button: "OK",
                                    });
                                }
                            })
                            .catch(error => {
                                console.error("Error:", error);

                                const quantityInput = document.getElementById(`quantity-${itemId}`);
                                quantityInput.value = parseInt(quantityInput.value, 10) - change;

                                swal({
                                    title: "Server Error",
                                    text: "An error occurred while updating the quantity. Please try again later.",
                                    icon: "error",
                                    button: "OK",
                                });
                            })
                            .finally(() => {

                                loadingOverlay.remove();
                            });
                    }




                    document.addEventListener('DOMContentLoaded', () => {
                        loadCheckout();
                    });

                    const loadCheckout = async () => {
                        try {

                            const response = await fetch('/checkout', {
                                method: 'GET',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                credentials: 'same-origin',
                            });

                            const data = await response.json();


                            if (response.ok) {

                                if (data.message === 'Your cart is empty.') {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Cart is Empty',
                                        text: data.message,
                                    });
                                } else {

                                    localStorage.setItem('cart', JSON.stringify(data.cart.items));
                                    console.log('Cart saved to localStorage:', data.cart.items);


                                    Swal.fire({
                                        icon: 'info',
                                        title: 'Checkout Information',
                                        text: data.message || 'Proceed with the checkout process.',
                                    });


                                    window.location.href = '/checkout';
                                }
                            } else {

                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message || 'An error occurred. Please try again later.',
                                });
                            }

                        } catch (error) {

                            console.log(error)
                        }
                    };


                    async function removeItem(itemId, color, size) {

                        const result = await Swal.fire({
                            title: 'Are you sure?',
                            text: `You are about to remove this Product from your cart.`,
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, remove it!',
                            cancelButtonText: 'No, keep it!',
                        });

                        if (result.isConfirmed) {
                            try {

                                const response = await fetch(`/cart/remove-item`, {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json',
                                    },
                                    body: JSON.stringify({
                                        itemId: itemId,
                                        color: color,
                                        size: size,

                                    }),
                                });

                                const data = await response.json();

                                if (response.ok) {

                                    Swal.fire('Removed!', 'The item has been removed from your cart.', 'success');

                                   window.location.reload()
                                    const itemRow = document.getElementById(`row-${itemId}`);
                                    if (itemRow) {
                                        itemRow.remove();

                                    }
                                } else {
                                    Swal.fire('Could not remove the item.');
                                }
                            } catch (error) {
                                Swal.fire('Error', 'An error occurred. Please try again later.', 'error');
                            }
                        }
                    }
                </script>



</body>

</html>