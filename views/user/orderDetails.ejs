<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Orders</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="/assets/css/user/orders.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
 /* Basic container styling */
/* Color Variables */
:root {
    --primary-blue: #2563eb;
    --hover-blue: #1d4ed8;
    --background-gray: #f8fafc;
    --border-gray: #e2e8f0;
    --text-dark: #1e293b;
    --text-gray: #64748b;
    --white: #FFFFFF;
    --soft-black: #1A1A1A;
}

/* Container Styles */
.container {
    max-width: 1400px;
    min-height: 800px;
    padding: 2rem;
    margin: 0 auto;
    background-color: var(--background-gray);
}

/* Header Styles */
h2.text-center {
    color: var(--text-dark);
    font-size: 2rem;
    font-weight: 600;
    margin-bottom: 2rem;
    position: relative;
    padding-bottom: 1rem;
}

h2.text-center::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 3px;
    background: linear-gradient(to right, var(--primary-blue), var(--hover-blue));
    border-radius: 2px;
}

/* Table Styles */
.table-responsive {
    background: var(--white);
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    overflow: hidden;
    margin-bottom: 2rem;
    border: 1px solid var(--border-gray);
}

.table {
    margin-bottom: 0;
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
}

/* Table Header */
.table thead th {
    background-color: var(--background-gray);
    color: var(--text-gray);
    font-weight: 600;
    padding: 1rem;
    border: none;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

/* Table Body */
.table tbody tr {
    transition: all 0.2s ease;
    border-bottom: 1px solid var(--border-gray);
}

.table tbody tr:hover {
    background-color: var(--background-gray);
}

.table tbody td {
    padding: 1rem;
    vertical-align: middle;
    color: var(--text-dark);
    font-size: 0.875rem;
}

/* Status Cell Styles */
.status-cell {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.status-cell p {
    margin: 0;
    font-weight: 500;
}

.status-cell select {
    padding: 0.375rem 2rem 0.375rem 0.75rem;
    border: 1px solid var(--border-gray);
    border-radius: 0.375rem;
    font-size: 0.875rem;
    color: var(--text-dark);
    background-color: var(--white);
}

/* Button Styles */
.btn {
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    font-weight: 500;
    font-size: 0.875rem;
    transition: all 0.2s ease;
}

.btn-primary {
    background-color: var(--primary-blue);
    border: none;
    color: var(--white);
}

.btn-primary:hover {
    background-color: var(--hover-blue);
    transform: translateY(-1px);
}

.btn-danger {
    background-color: #ef4444;
    color: var(--white);
}

.btn-danger:hover {
    background-color: #dc2626;
    transform: translateY(-1px);
}

/* Cancel Button */
.cancel-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.375rem 0.75rem;
    background-color: #fee2e2;
    color: #ef4444;
    border: none;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    transition: all 0.2s ease;
}

.cancel-button:hover {
    background-color: #fecaca;
}

/* Pagination Styles */
.pagination-container {
    margin-top: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
}

.pagination {
    display: flex;
    gap: 0.25rem;
}

.page-item .page-link {
    padding: 0.5rem 0.75rem;
    color: var(--text-gray);
    background-color: var(--white);
    border: 1px solid var(--border-gray);
    border-radius: 0.375rem;
    font-size: 0.875rem;
    transition: all 0.2s ease;
}

.page-item.active .page-link {
    background-color: var(--primary-blue);
    color: var(--white);
    border-color: var(--primary-blue);
}

.page-item .page-link:hover {
    background-color: var(--background-gray);
    color: var(--text-dark);
}

/* Custom Popup Styles */
.custom-popup {
    width: 80vw !important;
    max-width: 1200px !important;
    padding: 0 !important;
    border-radius: 12px !important;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1) !important;
}

.custom-title {
    color: var(--white) !important;
    font-size: 1.5rem !important;
    font-weight: 600 !important;
    margin: 0 !important;
    padding: 1rem 1.5rem !important;
    background: var(--primary-blue) !important;
}

.order-details-popup {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    padding: 1.5rem;
    background: var(--background-gray);
}

.order-details-popup p {
    margin: 0.5rem 0 !important;
    font-size: 0.875rem !important;
    line-height: 1.5 !important;
    color: var(--text-dark) !important;
    background: var(--white);
    padding: 0.75rem 1rem;
    border-radius: 0.375rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.address-details {
    grid-column: 1 / -1;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
    background: var(--white);
    padding: 1rem;
    border-radius: 0.375rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

/* Back Button */
.dash {
    display: inline-flex;
    align-items: center;
    padding: 0.75rem 1.5rem;
    background-color: var(--primary-blue);
    color: var(--white);
    border: none;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.2s ease;
    text-decoration: none;
}

.dash:hover {
    background-color: var(--hover-blue);
    transform: translateY(-1px);
}

/* Responsive Design */
@media (max-width: 768px) {
    .container {
        padding: 1rem;
    }

    .custom-popup {
        width: 95vw !important;
    }

    .order-details-popup,
    .address-details {
        grid-template-columns: 1fr;
    }

    .status-cell {
        flex-direction: column;
        align-items: flex-start;
    }
}
/* Pagination Container */
.pagination-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin: 2rem 0;
}

/* Page Counter Text */
.pagination-container span {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 500;
}

/* Pagination Navigation */
.pagination {
    display: flex;
    gap: 0.25rem;
    align-items: center;
    padding: 0;
    margin: 0;
}

/* Individual Page Items */
.page-item {
    list-style: none;
    margin: 0 2px;
}

/* Page Links */
.page-link {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 2rem;
    height: 2rem;
    padding: 0 0.75rem;
    font-size: 0.875rem;
    color: #64748b;
    background-color: #ffffff;
    border: 1px solid #e2e8f0;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
    text-decoration: none;
}

/* Hover State */
.page-link:hover:not(.disabled) {
    background-color: #f1f5f9;
    color: #1e293b;
    border-color: #cbd5e1;
    text-decoration: none;
}

/* Active State */
.page-item.active .page-link {
    background-color: #2563eb;
    color: #ffffff;
    border-color: #2563eb;
    font-weight: 500;
}

/* Previous/Next Arrows */
.page-link span[aria-hidden="true"] {
    font-size: 0.875rem;
    line-height: 1;
}

/* Disabled State */
.page-item.disabled .page-link {
    background-color: #f8fafc;
    color: #94a3b8;
    border-color: #e2e8f0;
    cursor: not-allowed;
    pointer-events: none;
}

/* Focus State */
.page-link:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
    border-color: #2563eb;
}

/* Hover Animation */
.page-link:not(.disabled) {
    transform: translateY(0);
    transition: transform 0.2s ease;
}

.page-link:hover:not(.disabled) {
    transform: translateY(-1px);
}

/* Responsive Design */
@media (max-width: 640px) {
    .pagination {
        gap: 0.125rem;
    }

    .page-link {
        min-width: 1.75rem;
        height: 1.75rem;
        padding: 0 0.5rem;
        font-size: 0.75rem;
    }

    .pagination-container span {
        font-size: 0.75rem;
    }
}

/* Optional: Hide certain page numbers on small screens */
@media (max-width: 480px) {
    .page-item:not(:first-child):not(:last-child):not(.active) {
        display: none;
    }
    
    .page-item.active {
        display: flex;
    }
}.dash {
  /* Base styles */
  display: flex;
  align-items: center;
  gap: 8px;
  background-color: #1a73e8;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  
  /* Add back arrow icon */
  position: relative;
  padding-left: 36px;
}

/* Back arrow using pseudo-element */
.dash::before {
  content: "‚Üê";
  position: absolute;
  left: 16px;
  font-size: 18px;
  line-height: 1;
}

/* Hover effects */
.dash:hover {
  background-color: #1557b0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transform: translateX(-2px);
}

/* Active state */
.dash:active {
  transform: translateX(-1px);
  background-color: #1244a0;
}

/* Focus state for accessibility */
.dash:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(26, 115, 232, 0.4);
}
  </style>

</head>

<body>
  <button class="dash" onclick="window.location.href='/profile/<%= user._id %>'">Profile</button>
  <div class="container mt-5">
    <h2 class="text-center mb-4">My Orders</h2>

    <!-- Orders Table -->
    <div class="table-responsive">
      <table class="table table-bordered">
        <thead class="table-dark">
          <tr>
            <th>Order ID</th>
            <th>Order Date</th>
            <th>Status</th>
            <th>   </th>
            <th>View Details</th>
            <th>Summary</th>
          </tr>
        </thead>
        <tbody id="orderList">
          <% orders.forEach(order => { %>
            <tr>
              <td><%= order.orderId %></td>
              <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
              <td><%= order.status %></td>
              <td>
                
              </td>
              <td>
                <button class="btn btn-primary" onclick="viewOrderDetails('<%= order.orderId %>')">View Details</button>
              </td>
              <td>
                <button class="btn btn-primary" onclick=" window.location.href = `/order/<%= order.orderId %>`">Order Summery</button>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>


  
    <div class="d-flex justify-content-center align-items-center mt-3">
      <div class="pagination-container text-center">
          <span class="me-2" style="color:rgb(0, 0, 0);">Page <%= currentPage %> of <%= totalPages %></span>
          <nav aria-label="Page navigation">
              <ul class="pagination pagination-sm justify-content-center">
                  
                 
                  <% if (currentPage > 1) { %>
                      <li class="page-item">
                          <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                              <span aria-hidden="true">&laquo;</span>
                          </a>
                      </li>
                  <% } else { %>
                      <li class="page-item disabled">
                          <span class="page-link">&laquo;</span>
                      </li>
                  <% } %>
  
            
                  <% for (let i = 1; i <= totalPages; i++) { %>
                      <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                          <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                      </li>
                  <% } %>
  
    
                  <% if (currentPage < totalPages) { %>
                      <li class="page-item">
                          <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                              <span aria-hidden="true">&raquo;</span>
                          </a>
                      </li>
                  <% } else { %>
                      <li class="page-item disabled">
                          <span class="page-link">&raquo;</span>
                      </li>
                  <% } %>
  
              </ul>
          </nav>
      </div>
  </div>
  
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>

function goBack() {
        window.location.href='/orderDetails' 
    }


    function viewOrderDetails(orderId) {
  fetch(`/user/orders/${orderId}`)
    .then(response => {
      console.log('Response Status:', response.status);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(orderArray => {
      if (Array.isArray(orderArray) && orderArray.length > 0) {
        const order = orderArray[0]; 

    
        const orderDetailsHtml = `
          <div class="order-details-popup">
            <p><strong>Order ID:</strong> ${order.orderId || 'N/A'}</p>
            <p><strong>Status:</strong> ${order.status || 'N/A'}</p>
            <p><strong>Payment Method:</strong> ${order.paymentMethod || 'N/A'}</p>
            <p><strong>Payment Status:</strong> ${order.paymentStatus || 'N/A'}</p>
            <p><strong>Total Price:</strong> ${order.totalPrice || 'N/A'}</p>
            <p><strong>Order Notes:</strong> ${order.orderNotes || 'N/A'}</p>
            <p><strong>Order Date:</strong> ${order.createdAt ? new Date(order.createdAt).toLocaleDateString() : 'N/A'}</p>
            <p><strong>Address:</strong></p>
            <div class="address-details">
              <p><strong>Full Name:</strong> ${order.address.fullName || 'N/A'}</p>
              <p><strong>Street:</strong> ${order.address.streetAddress || 'N/A'} ${order.address.aptNumber || ''}</p>
              <p><strong>City:</strong> ${order.address.city || 'N/A'}</p>
              <p><strong>State:</strong> ${order.address.state || 'N/A'}</p>
              <p><strong>Pincode:</strong> ${order.address.pincode || 'N/A'}</p>
              <p><strong>Country:</strong> ${order.address.country || 'N/A'}</p>
              <p><strong>Phone:</strong> ${order.address.phone || 'N/A'}</p>
              <p><strong>Alt Phone:</strong> ${order.address.altPhone || 'N/A'}</p>
              <p><strong>Address Type:</strong> ${order.address.addressType || 'N/A'}</p>
            </div>
          </div>
        `;

     
        Swal.fire({
          title: 'Order Details',
          html: orderDetailsHtml,
          confirmButtonText: 'Close',
          customClass: {
            popup: 'custom-popup', 
            title: 'custom-title', 
            htmlContainer: 'custom-html', 
            confirmButton: 'custom-confirm-button', 
          },
          width: '1000px', 
        });
      } else {
        Swal.fire('No order details found.');
        console.error('Empty order array:', orderArray);
      }
    })
    .catch(error => {
      console.error('Error fetching order details:', error);
      Swal.fire('Failed to fetch order details.');
    });
}




function cancelOrder(orderId) {

    Swal.fire({
      title: 'Are you sure?',
      text: "You want to cancel this order?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, cancel it!',
      cancelButtonText: 'No, keep it'
    }).then(async (result) => {
      if (result.isConfirmed) {

        try {
          const response = await fetch('/user/orders/cancel', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId }), 
          });

          const data = await response.json();

          if (response.ok) {
            Swal.fire({
              title: 'Success!',
              text: data.message || 'Order has been cancelled.',
              icon: 'success',
            }).then(() => {
          location.reload();
             });
          } else {
            Swal.fire({
              title: 'Error!',
              text: data.error || 'Something went wrong. Please try again.',
              icon: 'error',
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            title: 'Error!',
            text: 'Something went wrong. Please try again later.',
            icon: 'error',
          });
        }
      }
    });
  }




 


  </script>
  
 </body>

</html>