<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Orders</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
  <link rel="stylesheet" href="/assets/css/user/orders.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
 /* Basic container styling */
/* Color Variables */
:root {
    --primary-brown: #8B4513;
    --light-brown: #DEB887;
    --dark-brown: #3E2723;
    --off-white: #FAFAFA;
    --pure-white: #FFFFFF;
    --soft-black: #1A1A1A;
}

/* Container Styles */
.container {
    max-width: 1400px;
    min-height: 800px;
    padding: 3rem;
    margin: 0 auto;
    background-color: var(--off-white);
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
}

/* Header Styles */
h2.text-center {
    color: var(--dark-brown);
    font-size: 2.8rem;
    font-weight: 600;
    margin-bottom: 3rem;
    position: relative;
    padding-bottom: 1.5rem;
}

h2.text-center::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 120px;
    height: 4px;
    background: linear-gradient(to right, var(--primary-brown), var(--light-brown));
    border-radius: 2px;
}

/* Table Styles */
.table-responsive {
    background: var(--pure-white);
    border-radius: 15px;
    box-shadow: 0 8px 25px rgba(139, 69, 19, 0.1);
    overflow: hidden;
    margin-bottom: 3rem;
    border: 1px solid var(--light-brown);
}

.table {
    margin-bottom: 0;
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
}

/* Table Header */
.table-dark {
    background: linear-gradient(135deg, var(--dark-brown), var(--primary-brown));
}

.table thead th {
    color: var(--pure-white);
    font-weight: 600;
    text-transform: uppercase;
    padding: 1.5rem 1.2rem;
    border: none;
    font-size: 1rem;
    letter-spacing: 1px;
}

/* Table Body */
.table tbody tr {
    transition: all 0.3s ease;
    border-bottom: 1px solid rgba(139, 69, 19, 0.1);
}

.table tbody tr:hover {
    background-color: rgba(222, 184, 135, 0.1);
    transform: translateY(-2px);
}

.table tbody td {
    padding: 1.2rem;
    vertical-align: middle;
    color: var(--soft-black);
    font-size: 1rem;
}

/* Button Styles */
.btn {
    padding: 0.8rem 1.5rem;
    border-radius: 8px;
    font-weight: 500;
    text-transform: uppercase;
    font-size: 0.9rem;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
}

.btn-danger {
    background-color: var(--soft-black);
    border: none;
    color: var(--pure-white);
}

.btn-danger:hover {
    background-color: #000000;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.btn-primary {
    background-color: var(--primary-brown);
    border: none;
    color: var(--pure-white);
}

.btn-primary:hover {
    background-color: var(--dark-brown);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(139, 69, 19, 0.3);
}


.custom-popup {
  font-size: 18px; 
  line-height: 1.6; 
  padding: 20px;
}

.custom-title {
  font-size: 24px; 
  font-weight: bold;
  margin-bottom: 20px; 
}

.custom-html {
  font-size: 18px; 
}

.custom-confirm-button {
  font-size: 20px;
  padding: 10px 20px; 
  background-color: #007bff; 
  border: none; 
  border-radius: 5px; 
}

.custom-confirm-button:hover {
  background-color: #0056b3; 
}

.order-details-popup {
  max-width: 100%; 
}

.address-details {
  margin-left: 20px; 
  margin-top: 10px; 
}
.custom-popup {
  max-width: 600px; 
  font-size: 16px; 
}
  </style>

</head>

<body>
  <div class="container mt-5">
    <h2 class="text-center mb-4">My Orders</h2>

    <!-- Orders Table -->
    <div class="table-responsive">
      <table class="table table-bordered">
        <thead class="table-dark">
          <tr>
            <th>Order ID</th>
            <th>Order Date</th>
            <th>Status</th>
            <th>   </th>
            <th>View Details</th>
            <th>Summary</th>
          </tr>
        </thead>
        <tbody id="orderList">
          <% orders.forEach(order => { %>
            <tr>
              <td><%= order.orderId %></td>
              <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
              <td><%= order.status %></td>
              <td>
                
              </td>
              <td>
                <button class="btn btn-primary" onclick="viewOrderDetails('<%= order.orderId %>')">View Details</button>
              </td>
              <td>
                <button class="btn btn-primary" onclick=" window.location.href = `/order/<%= order.orderId %>`">Order Summery</button>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
    </div>


    <div id="orderDetails" style="display: none;">
      <h3>Order Details</h3>
      <p><strong>Order ID:</strong> <span id="orderId"></span></p>
      <p><strong>Status:</strong> <span id="orderStatus"></span></p>
      <p><strong>Payment Method:</strong> <span id="paymentMethod"></span></p>
      <p><strong>Total Price:</strong> <span id="totalPriceog"></span></p>
      <p><strong>Total Price(R/C):</strong> <span id="totalPrice"></span></p>
      <p><strong>Order Notes:</strong> <span id="orderNotes"></span></p>
      <p><strong>Created At:</strong> <span id="createdAt"></span></p>
      <p><strong>Address:</strong> <span id="Address"></span></p>
  
  
      <button id="backButton" onclick="goBack()" class="btn btn-secondary">Back</button>
  </div>
  
  </div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>

function goBack() {
        window.location.href='/orderDetails' 
    }


    function viewOrderDetails(orderId) {
  fetch(`/user/orders/${orderId}`)
    .then(response => {
      console.log('Response Status:', response.status);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(orderArray => {
      if (Array.isArray(orderArray) && orderArray.length > 0) {
        const order = orderArray[0]; 

    
        const orderDetailsHtml = `
          <div class="order-details-popup">
            <p><strong>Order ID:</strong> ${order.orderId || 'N/A'}</p>
            <p><strong>Status:</strong> ${order.status || 'N/A'}</p>
            <p><strong>Payment Method:</strong> ${order.paymentMethod || 'N/A'}</p>
            <p><strong>Total Price:</strong> ${order.totalPrice || 'N/A'}</p>
            <p><strong>Order Notes:</strong> ${order.orderNotes || 'N/A'}</p>
            <p><strong>Order Date:</strong> ${order.createdAt ? new Date(order.createdAt).toLocaleDateString() : 'N/A'}</p>
            <p><strong>Address:</strong></p>
            <div class="address-details">
              <p><strong>Full Name:</strong> ${order.address.fullName || 'N/A'}</p>
              <p><strong>Street:</strong> ${order.address.streetAddress || 'N/A'} ${order.address.aptNumber || ''}</p>
              <p><strong>City:</strong> ${order.address.city || 'N/A'}</p>
              <p><strong>State:</strong> ${order.address.state || 'N/A'}</p>
              <p><strong>Pincode:</strong> ${order.address.pincode || 'N/A'}</p>
              <p><strong>Country:</strong> ${order.address.country || 'N/A'}</p>
              <p><strong>Phone:</strong> ${order.address.phone || 'N/A'}</p>
              <p><strong>Alt Phone:</strong> ${order.address.altPhone || 'N/A'}</p>
              <p><strong>Address Type:</strong> ${order.address.addressType || 'N/A'}</p>
            </div>
          </div>
        `;

     
        Swal.fire({
          title: 'Order Details',
          html: orderDetailsHtml,
          confirmButtonText: 'Close',
          customClass: {
            popup: 'custom-popup', 
            title: 'custom-title', 
            htmlContainer: 'custom-html', 
            confirmButton: 'custom-confirm-button', 
          },
          width: '1000px', 
        });
      } else {
        Swal.fire('No order details found.');
        console.error('Empty order array:', orderArray);
      }
    })
    .catch(error => {
      console.error('Error fetching order details:', error);
      Swal.fire('Failed to fetch order details.');
    });
}




function cancelOrder(orderId) {

    Swal.fire({
      title: 'Are you sure?',
      text: "You want to cancel this order?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, cancel it!',
      cancelButtonText: 'No, keep it'
    }).then(async (result) => {
      if (result.isConfirmed) {

        try {
          const response = await fetch('/user/orders/cancel', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId }), 
          });

          const data = await response.json();

          if (response.ok) {
            Swal.fire({
              title: 'Success!',
              text: data.message || 'Order has been cancelled.',
              icon: 'success',
            }).then(() => {
          location.reload();
             });
          } else {
            Swal.fire({
              title: 'Error!',
              text: data.error || 'Something went wrong. Please try again.',
              icon: 'error',
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            title: 'Error!',
            text: 'Something went wrong. Please try again later.',
            icon: 'error',
          });
        }
      }
    });
  }





  


  </script>
  
 </body>

</html>