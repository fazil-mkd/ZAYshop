<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Address</title>
    
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.css">

    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.0/dist/sweetalert2.min.js"></script>

    <style>
/* General Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Arial', sans-serif;
}

/* Form Container Styling */
.form-container {
    max-width: 600px;
    margin: 20px auto;
    padding: 25px;
    background-color: #ffffff;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    border: 1px solid #e0e0e0;
}

/* Heading Styling */
.form-container h6 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 25px;
    text-align: center;
}

/* Form Group Styling */
.form-group {
    margin-bottom: 20px;
}

/* Label Styling */
.form-label {
    display: block;
    font-size: 0.9rem;
    font-weight: 500;
    color: #34495e;
    margin-bottom: 8px;
}

/* Input and Select Styling */
.form-control {
    width: 100%;
    padding: 12px;
    font-size: 0.9rem;
    border: 1px solid #bdc3c7;
    border-radius: 6px;
    background-color: #f9f9f9;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.form-control:focus {
    border-color: #3498db;
    box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);
    outline: none;
}

/* Error Message Styling */
.text-danger {
    font-size: 0.8rem;
    color: #e74c3c;
    margin-top: 5px;
}

/* Button Styling */
.btn-primary {
    width: 100%;
    padding: 12px;
    font-size: 1rem;
    font-weight: 500;
    color: #ffffff;
    background-color: #3498db;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.btn-primary:hover {
    background-color: #2980b9;
}

/* Optional Input Styling */
input[type="text"].form-control:optional,
input[type="tel"].form-control:optional {
    background-color: #f0f0f0;
}

/* Select Dropdown Styling */
select.form-control {
    appearance: none;
    background-image: url("data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%233498db%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E");
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 12px;
}

/* Responsive Design */
@media (max-width: 768px) {
    .form-container {
        padding: 20px;
    }

    .form-container h6 {
        font-size: 1.3rem;
    }

    .form-control {
        font-size: 0.85rem;
    }

    .btn-primary {
        font-size: 0.9rem;
    }
}.dash {
  /* Base styles */
  display: flex;
  align-items: center;
  gap: 8px;
  background-color: #1a73e8;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  
  /* Add back arrow icon */
  position: relative;
  padding-left: 36px;
}

/* Back arrow using pseudo-element */
.dash::before {
  content: "‚Üê";
  position: absolute;
  left: 16px;
  font-size: 18px;
  line-height: 1;
}

/* Hover effects */
.dash:hover {
  background-color: #1557b0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transform: translateX(-2px);
}

/* Active state */
.dash:active {
  transform: translateX(-1px);
  background-color: #1244a0;
}

/* Focus state for accessibility */
.dash:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(26, 115, 232, 0.4);
}
    </style>
</head>
<body>
    <button class="dash" onclick="window.location.href='/address'">Address</button>
    <div class="form-container">
        <h6>Update Address</h6>
    
        <form class="updateAddress" action="/update-address/<%= address._id %>?_method=PUT" method="POST" data-address-id="<%= address._id %>">
            <div class="form-group">
                <label for="fullName" class="form-label">Full Name</label>
                <input type="text" class="form-control" id="fullName" name="fullName" value="<%= address.fullName %>">
                <div id="fullNameError" class="text-danger" style="display:none;">Full Name is required.</div>
            </div>
    
            <div class="form-group">
                <label for="streetAddress" class="form-label">Street Address</label>
                <input type="text" class="form-control" id="streetAddress" name="streetAddress" value="<%= address.streetAddress %>">
                <div id="streetAddressError" class="text-danger" style="display:none;">Street Address is required.</div>
            </div>
    
            <div class="form-group">
                <label for="aptNumber" class="form-label">Apartment/Unit Number (optional)</label>
                <input type="text" class="form-control" id="aptNumber" name="aptNumber" value="<%= address.aptNumber %>">
            </div>
    
            <div class="form-group">
                <label for="city" class="form-label">City</label>
                <input type="text" class="form-control" id="city" name="city" value="<%= address.city %>">
                <div id="cityError" class="text-danger" style="display:none;">City is required.</div>
            </div>
    
            <div class="form-group">
                <label for="state" class="form-label">State/Province</label>
                <input type="text" class="form-control" id="state" name="state" value="<%= address.state %>">
                <div id="stateError" class="text-danger" style="display:none;">State/Province is required.</div>
            </div>
    
            <div class="form-group">
                <label for="pincode" class="form-label">Postal Code</label>
                <input type="text" class="form-control" id="pincode" name="pincode" value="<%= address.pincode %>">
                <div id="pincodeError" class="text-danger" style="display:none;">Postal Code is required.</div>
            </div>
    
            <div class="form-group">
                <label for="country" class="form-label">Country</label>
                <input type="text" class="form-control" id="country" name="country" value="<%= address.country %>">
                <div id="countryError" class="text-danger" style="display:none;">Country is required.</div>
            </div>
    
            <div class="form-group">
                <label for="phone" class="form-label">Phone Number</label>
                <input type="tel" class="form-control" id="phone" name="phone" value="<%= address.phone %>">
                <div id="phoneError" class="text-danger" style="display:none;">Phone Number is required.</div>
            </div>
    
            <div class="form-group">
                <label for="altPhone" class="form-label">Alternate Phone Number (optional)</label>
                <input type="tel" class="form-control" id="altPhone" name="altPhone" value="<%= address.altPhone %>">
            </div>
    
            <div class="form-group">
                <label for="addressType" class="form-label">Address Type</label>
                <select id="addressType" name="addressType" class="form-control">
                    <option value="" <%= address.addressType ? '' : 'selected' %>>Select Address Type</option>
                    <option value="home" <%= address.addressType === 'home' ? 'selected' : '' %>>Home</option>
                    <option value="work" <%= address.addressType === 'work' ? 'selected' : '' %>>Work</option>
                    <option value="billing" <%= address.addressType === 'billing' ? 'selected' : '' %>>Billing</option>
                    <option value="shipping" <%= address.addressType === 'shipping' ? 'selected' : '' %>>Shipping</option>
                </select>
                <div id="addressTypeError" class="text-danger" style="display:none;">Address Type is required.</div>
            </div>
    
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Save Address</button>
            </div>
        </form>
    </div>
        
        <script>
         
         document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('.updateAddress'); 

    async function validateAndSubmitForm(event) {
        event.preventDefault(); 

        let isValid = true;
        const fields = [
            { id: 'fullName', errorId: 'fullNameError', regex: /^[A-Za-z\s]+$/, message: 'Full Name must only contain letters and spaces.' },
            { id: 'streetAddress', errorId: 'streetAddressError', regex: /^[A-Za-z0-9\s,.'-]+$/, message: 'Street Address can contain letters, numbers, and common punctuation.' },
            { id: 'city', errorId: 'cityError', regex: /^[A-Za-z\s]+$/, message: 'City must only contain letters .' },
            { id: 'state', errorId: 'stateError', regex: /^[A-Za-z\s]+$/, message: 'State must only contain letters ' },
            { id: 'pincode', errorId: 'pincodeError', regex: /^[A-Za-z0-9\s-]+$/, message: 'Postal Code can contain letters, numbers, spaces, or hyphens.' },
            { id: 'country', errorId: 'countryError', regex: /^[A-Za-z\s]+$/, message: 'Country must only contain letters .' },
            { id: 'phone', errorId: 'phoneError', regex: /^[0-9]{10}$/, message: 'Phone Number must be 10 digits.' },
            { id: 'addressType', errorId: 'addressTypeError', regex: /.+/, message: 'Please select an Address Type.' }
        ];

        fields.forEach(field => {
            const input = document.getElementById(field.id);
            const errorSpan = document.getElementById(field.errorId);

            if (!field.regex.test(input.value)) {
                errorSpan.textContent = field.message;
                errorSpan.style.display = 'block';
                isValid = false;
            } else {
                errorSpan.style.display = 'none';
            }
        });

        if (!isValid) return; 

        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        try {
    const response = await fetch(`/update-address/${form.dataset.addressId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
    });

    const contentType = response.headers.get("content-type");

    if (!contentType || !contentType.includes("application/json")) {
        throw new Error("Server did not return JSON. Possible HTML response.");
    }

    const result = await response.json();

    if (response.ok) {
        Swal.fire({
            title: 'Success!',
            text: result.message,
            icon: 'success',
            confirmButtonText: 'OK'
        }).then(() => {
            window.location.href = '/address';  
        });
    } else {
        Swal.fire({
            title: 'Error!',
            text: result.message || 'Failed to update address.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
} catch (err) {
    console.error('Error:', err);
    Swal.fire({
        title: 'Error!',
        text: err.message || 'An error occurred while updating the address.',
        icon: 'error',
        confirmButtonText: 'OK'
    });
}

    }

    form.addEventListener('submit', validateAndSubmitForm);
});

    </script>
</body>
</html>